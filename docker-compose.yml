# version: '3.8'

# services:
#   rabbitmq:
#     hostname: rabbitmq
#     image: rabbitmq:3.9-management
#     ports:
#       - "5672:5672"   # RabbitMQ default port
#       - "15672:15672"  # RabbitMQ management UI port
#     environment:
#       RABBITMQ_DEFAULT_USER: guest
#       RABBITMQ_DEFAULT_PASS: guest
#       TZ: "America/Denver"
#     healthcheck:
#       test: ["CMD", "rabbitmqctl", "status"]
#       interval: 10s
#       retries: 3
#       start_period: 30s
#       timeout: 5s

#   flask-app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8080:8080"
#     environment:
#       - FLASK_APP=app #uses the app folder (defaults to __init__.py)
#       - FLASK_ENV=development
#       - FLASK_RUN_HOST=0.0.0.0
#       - RABBITMQ_HOST=rabbitmq
#       # - CELERY_BROKER_URL=pyamqp://guest@rabbitmq//  # This is where Celery connects to RabbitMQ
#       # - CELERY_RESULT_BACKEND=rpc://  # Celery backend to track results
#     volumes:
#       - .:/app  # Mount the current directory to /app inside the container
#     depends_on:
#       - rabbitmq

version: '3.8'

services:
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - FLASK_APP=app
      - FLASK_ENV=development
      - FLASK_RUN_HOST=0.0.0.0
      - RABBITMQ_URL=${CLOUDAMQP_URL}
    volumes:
      - .:/app