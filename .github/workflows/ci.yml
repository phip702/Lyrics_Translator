name: CI for Flask Test Suite

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3.9-management
        ports:
          - 5672:5672
        options: --health-cmd="rabbitmqctl status" --health-interval=10s --health-retries=3 --health-timeout=5s
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start services using Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d  # Start services in the background

      - name: Install dependencies inside the container
        run: |
          docker-compose exec flask-app pip install --upgrade pip  # Upgrade pip inside the flask container
          docker-compose exec flask-app pip install -r /app/requirements.txt  # Install app dependencies

      - name: Run Flask tests with coverage
        run: |
          docker-compose exec flask-app coverage run -m pytest app/tests/test_routes.py  # Run tests in the container
          docker-compose exec flask-app coverage report  # Print the coverage report
          docker-compose exec flask-app coverage html  # Optional HTML report

      - name: Upload coverage results (optional)
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/  # Upload the coverage HTML report folder
          
      - name: Shut down Docker Compose services
        run: docker-compose down  # Shut down services after the test completes
